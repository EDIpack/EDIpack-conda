name: Test a build


on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANACONDA_API_KEY: ${{ secrets.ANACONDA_API_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Get Latest Tag from edipack
        run: |
          LATEST_TAG=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
          "https://api.github.com/repos/edipack/edipack/git/refs/tags" | \
          jq -r '.[].ref' | sed 's#refs/tags/##' | sort -V | grep -v v | tail -n 1)
          echo "Latest Tag: $LATEST_TAG"
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Build with conda-forge/anvil container
        run: |
          docker run --rm -v "$PWD":/io -w /io \
            -e LATEST_TAG="$LATEST_TAG" \
            -e PYTHONVERSION="3.13" \
            condaforge/linux-anvil-x86_64:alma8 bash -c  '
              set -e
              echo "Create and activate build environment with rattler-build..."
              mamba create -n build-env -c conda-forge python=3.13 rattler-build jq curl -y
              source $(conda info --base)/etc/profile.d/conda.sh
              conda activate build-env

              echo "Latest tag: $LATEST_TAG"
              echo "Python ver: $PYTHONVERSION"

              echo "Patching recipe..."
              mkdir -p /tmp/build_workspace
              cp -r /io/* /tmp/build_workspace/
              cp /io/recipe_rattler/recipe.yaml /tmp/recipe.yaml
              sed -i "3s|0\\.0\\.1|${LATEST_TAG}|g" /tmp/recipe.yaml
              sed -i "4s|3\\.13|${PYTHONVERSION}|g" /tmp/recipe.yaml

              echo "Running rattler-build..."
              rattler-build build --recipe /tmp/recipe.yaml --output-dir /tmp/output
              PKG=$(find /tmp/output -type f -name "*.conda" -o -name "*.tar.bz2")
              echo "Built package: $PKG"
              rattler-build upload anaconda -f -o edipack "$PKG"
          '

          
          
